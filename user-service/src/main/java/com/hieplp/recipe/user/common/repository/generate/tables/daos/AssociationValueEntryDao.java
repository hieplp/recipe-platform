/*
 * This file is generated by jOOQ.
 */
package com.hieplp.recipe.user.common.repository.generate.tables.daos;


import com.hieplp.recipe.user.common.repository.generate.tables.AssociationValueEntry;
import com.hieplp.recipe.user.common.repository.generate.tables.records.AssociationValueEntryRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AssociationValueEntryDao extends DAOImpl<AssociationValueEntryRecord, com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry, Long> {

    /**
     * Create a new AssociationValueEntryDao without any configuration
     */
    public AssociationValueEntryDao() {
        super(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY, com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry.class);
    }

    /**
     * Create a new AssociationValueEntryDao with an attached configuration
     */
    public AssociationValueEntryDao(Configuration configuration) {
        super(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY, com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry.class, configuration);
    }

    @Override
    public Long getId(com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchById(Long... values) {
        return fetch(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry fetchOneById(Long value) {
        return fetchOne(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.ID, value);
    }

    /**
     * Fetch records that have <code>association_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchRangeOfAssociationKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.ASSOCIATION_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>association_key IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchByAssociationKey(String... values) {
        return fetch(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.ASSOCIATION_KEY, values);
    }

    /**
     * Fetch records that have <code>association_value BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchRangeOfAssociationValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.ASSOCIATION_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>association_value IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchByAssociationValue(String... values) {
        return fetch(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.ASSOCIATION_VALUE, values);
    }

    /**
     * Fetch records that have <code>saga_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchRangeOfSagaId(String lowerInclusive, String upperInclusive) {
        return fetchRange(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.SAGA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>saga_id IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchBySagaId(String... values) {
        return fetch(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.SAGA_ID, values);
    }

    /**
     * Fetch records that have <code>saga_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchRangeOfSagaType(String lowerInclusive, String upperInclusive) {
        return fetchRange(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.SAGA_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>saga_type IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.AssociationValueEntry> fetchBySagaType(String... values) {
        return fetch(AssociationValueEntry.ASSOCIATION_VALUE_ENTRY.SAGA_TYPE, values);
    }
}
