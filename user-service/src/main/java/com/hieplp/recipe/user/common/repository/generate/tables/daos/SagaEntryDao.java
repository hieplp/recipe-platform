/*
 * This file is generated by jOOQ.
 */
package com.hieplp.recipe.user.common.repository.generate.tables.daos;


import com.hieplp.recipe.user.common.repository.generate.tables.SagaEntry;
import com.hieplp.recipe.user.common.repository.generate.tables.records.SagaEntryRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SagaEntryDao extends DAOImpl<SagaEntryRecord, com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry, String> {

    /**
     * Create a new SagaEntryDao without any configuration
     */
    public SagaEntryDao() {
        super(SagaEntry.SAGA_ENTRY, com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry.class);
    }

    /**
     * Create a new SagaEntryDao with an attached configuration
     */
    public SagaEntryDao(Configuration configuration) {
        super(SagaEntry.SAGA_ENTRY, com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry.class, configuration);
    }

    @Override
    public String getId(com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry object) {
        return object.getSagaId();
    }

    /**
     * Fetch records that have <code>saga_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchRangeOfSagaId(String lowerInclusive, String upperInclusive) {
        return fetchRange(SagaEntry.SAGA_ENTRY.SAGA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>saga_id IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchBySagaId(String... values) {
        return fetch(SagaEntry.SAGA_ENTRY.SAGA_ID, values);
    }

    /**
     * Fetch a unique record that has <code>saga_id = value</code>
     */
    public com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry fetchOneBySagaId(String value) {
        return fetchOne(SagaEntry.SAGA_ENTRY.SAGA_ID, value);
    }

    /**
     * Fetch records that have <code>revision BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchRangeOfRevision(String lowerInclusive, String upperInclusive) {
        return fetchRange(SagaEntry.SAGA_ENTRY.REVISION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>revision IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchByRevision(String... values) {
        return fetch(SagaEntry.SAGA_ENTRY.REVISION, values);
    }

    /**
     * Fetch records that have <code>saga_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchRangeOfSagaType(String lowerInclusive, String upperInclusive) {
        return fetchRange(SagaEntry.SAGA_ENTRY.SAGA_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>saga_type IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchBySagaType(String... values) {
        return fetch(SagaEntry.SAGA_ENTRY.SAGA_TYPE, values);
    }

    /**
     * Fetch records that have <code>serialized_saga BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchRangeOfSerializedSaga(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(SagaEntry.SAGA_ENTRY.SERIALIZED_SAGA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>serialized_saga IN (values)</code>
     */
    public List<com.hieplp.recipe.user.common.repository.generate.tables.pojos.SagaEntry> fetchBySerializedSaga(byte[]... values) {
        return fetch(SagaEntry.SAGA_ENTRY.SERIALIZED_SAGA, values);
    }
}
