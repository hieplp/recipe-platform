/*
 * This file is generated by jOOQ.
 */
package com.hieplp.recipe.user.common.repository.generate.tables.records;


import com.hieplp.recipe.user.common.repository.generate.tables.DeadLetterEntry;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DeadLetterEntryRecord extends UpdatableRecordImpl<DeadLetterEntryRecord> implements Record22<String, String, String, byte[], LocalDateTime, LocalDateTime, String, String, String, byte[], byte[], String, String, Long, String, byte[], String, String, String, LocalDateTime, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached DeadLetterEntryRecord
     */
    public DeadLetterEntryRecord() {
        super(DeadLetterEntry.DEAD_LETTER_ENTRY);
    }

    /**
     * Create a detached, initialised DeadLetterEntryRecord
     */
    public DeadLetterEntryRecord(String deadLetterId, String causeMessage, String causeType, byte[] diagnostics, LocalDateTime enqueuedAt, LocalDateTime lastTouched, String aggregateIdentifier, String eventIdentifier, String messageType, byte[] metaData, byte[] payload, String payloadRevision, String payloadType, Long sequenceNumber, String timeStamp, byte[] token, String tokenType, String type, String processingGroup, LocalDateTime processingStarted, String sequenceIdentifier, Long sequenceIndex) {
        super(DeadLetterEntry.DEAD_LETTER_ENTRY);

        setDeadLetterId(deadLetterId);
        setCauseMessage(causeMessage);
        setCauseType(causeType);
        setDiagnostics(diagnostics);
        setEnqueuedAt(enqueuedAt);
        setLastTouched(lastTouched);
        setAggregateIdentifier(aggregateIdentifier);
        setEventIdentifier(eventIdentifier);
        setMessageType(messageType);
        setMetaData(metaData);
        setPayload(payload);
        setPayloadRevision(payloadRevision);
        setPayloadType(payloadType);
        setSequenceNumber(sequenceNumber);
        setTimeStamp(timeStamp);
        setToken(token);
        setTokenType(tokenType);
        setType(type);
        setProcessingGroup(processingGroup);
        setProcessingStarted(processingStarted);
        setSequenceIdentifier(sequenceIdentifier);
        setSequenceIndex(sequenceIndex);
    }

    /**
     * Getter for <code>user.dead_letter_entry.dead_letter_id</code>.
     */
    public String getDeadLetterId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>user.dead_letter_entry.dead_letter_id</code>.
     */
    public DeadLetterEntryRecord setDeadLetterId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.cause_message</code>.
     */
    public String getCauseMessage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.dead_letter_entry.cause_message</code>.
     */
    public DeadLetterEntryRecord setCauseMessage(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.cause_type</code>.
     */
    public String getCauseType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.dead_letter_entry.cause_type</code>.
     */
    public DeadLetterEntryRecord setCauseType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.diagnostics</code>.
     */
    public byte[] getDiagnostics() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>user.dead_letter_entry.diagnostics</code>.
     */
    public DeadLetterEntryRecord setDiagnostics(byte[] value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.enqueued_at</code>.
     */
    public LocalDateTime getEnqueuedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>user.dead_letter_entry.enqueued_at</code>.
     */
    public DeadLetterEntryRecord setEnqueuedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.last_touched</code>.
     */
    public LocalDateTime getLastTouched() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>user.dead_letter_entry.last_touched</code>.
     */
    public DeadLetterEntryRecord setLastTouched(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.aggregate_identifier</code>.
     */
    public String getAggregateIdentifier() {
        return (String) get(6);
    }

    /**
     * Setter for <code>user.dead_letter_entry.aggregate_identifier</code>.
     */
    public DeadLetterEntryRecord setAggregateIdentifier(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.event_identifier</code>.
     */
    public String getEventIdentifier() {
        return (String) get(7);
    }

    /**
     * Setter for <code>user.dead_letter_entry.event_identifier</code>.
     */
    public DeadLetterEntryRecord setEventIdentifier(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.message_type</code>.
     */
    public String getMessageType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>user.dead_letter_entry.message_type</code>.
     */
    public DeadLetterEntryRecord setMessageType(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.meta_data</code>.
     */
    public byte[] getMetaData() {
        return (byte[]) get(9);
    }

    /**
     * Setter for <code>user.dead_letter_entry.meta_data</code>.
     */
    public DeadLetterEntryRecord setMetaData(byte[] value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.payload</code>.
     */
    public byte[] getPayload() {
        return (byte[]) get(10);
    }

    /**
     * Setter for <code>user.dead_letter_entry.payload</code>.
     */
    public DeadLetterEntryRecord setPayload(byte[] value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.payload_revision</code>.
     */
    public String getPayloadRevision() {
        return (String) get(11);
    }

    /**
     * Setter for <code>user.dead_letter_entry.payload_revision</code>.
     */
    public DeadLetterEntryRecord setPayloadRevision(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.payload_type</code>.
     */
    public String getPayloadType() {
        return (String) get(12);
    }

    /**
     * Setter for <code>user.dead_letter_entry.payload_type</code>.
     */
    public DeadLetterEntryRecord setPayloadType(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.sequence_number</code>.
     */
    public Long getSequenceNumber() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>user.dead_letter_entry.sequence_number</code>.
     */
    public DeadLetterEntryRecord setSequenceNumber(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.time_stamp</code>.
     */
    public String getTimeStamp() {
        return (String) get(14);
    }

    /**
     * Setter for <code>user.dead_letter_entry.time_stamp</code>.
     */
    public DeadLetterEntryRecord setTimeStamp(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.token</code>.
     */
    public byte[] getToken() {
        return (byte[]) get(15);
    }

    /**
     * Setter for <code>user.dead_letter_entry.token</code>.
     */
    public DeadLetterEntryRecord setToken(byte[] value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.token_type</code>.
     */
    public String getTokenType() {
        return (String) get(16);
    }

    /**
     * Setter for <code>user.dead_letter_entry.token_type</code>.
     */
    public DeadLetterEntryRecord setTokenType(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.type</code>.
     */
    public String getType() {
        return (String) get(17);
    }

    /**
     * Setter for <code>user.dead_letter_entry.type</code>.
     */
    public DeadLetterEntryRecord setType(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.processing_group</code>.
     */
    public String getProcessingGroup() {
        return (String) get(18);
    }

    /**
     * Setter for <code>user.dead_letter_entry.processing_group</code>.
     */
    public DeadLetterEntryRecord setProcessingGroup(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.processing_started</code>.
     */
    public LocalDateTime getProcessingStarted() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>user.dead_letter_entry.processing_started</code>.
     */
    public DeadLetterEntryRecord setProcessingStarted(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>user.dead_letter_entry.sequence_identifier</code>.
     */
    public String getSequenceIdentifier() {
        return (String) get(20);
    }

    /**
     * Setter for <code>user.dead_letter_entry.sequence_identifier</code>.
     */
    public DeadLetterEntryRecord setSequenceIdentifier(String value) {
        set(20, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>user.dead_letter_entry.sequence_index</code>.
     */
    public Long getSequenceIndex() {
        return (Long) get(21);
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>user.dead_letter_entry.sequence_index</code>.
     */
    public DeadLetterEntryRecord setSequenceIndex(Long value) {
        set(21, value);
        return this;
    }

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    @Override
    public Row22<String, String, String, byte[], LocalDateTime, LocalDateTime, String, String, String, byte[], byte[], String, String, Long, String, byte[], String, String, String, LocalDateTime, String, Long> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    @Override
    public Row22<String, String, String, byte[], LocalDateTime, LocalDateTime, String, String, String, byte[], byte[], String, String, Long, String, byte[], String, String, String, LocalDateTime, String, Long> valuesRow() {
        return (Row22) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.DEAD_LETTER_ID;
    }

    @Override
    public Field<String> field2() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.CAUSE_MESSAGE;
    }

    @Override
    public Field<String> field3() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.CAUSE_TYPE;
    }

    @Override
    public Field<byte[]> field4() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.DIAGNOSTICS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.ENQUEUED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.LAST_TOUCHED;
    }

    @Override
    public Field<String> field7() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.AGGREGATE_IDENTIFIER;
    }

    @Override
    public Field<String> field8() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.EVENT_IDENTIFIER;
    }

    @Override
    public Field<String> field9() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.MESSAGE_TYPE;
    }

    @Override
    public Field<byte[]> field10() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.META_DATA;
    }

    @Override
    public Field<byte[]> field11() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.PAYLOAD;
    }

    @Override
    public Field<String> field12() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.PAYLOAD_REVISION;
    }

    @Override
    public Field<String> field13() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.PAYLOAD_TYPE;
    }

    @Override
    public Field<Long> field14() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.SEQUENCE_NUMBER;
    }

    @Override
    public Field<String> field15() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.TIME_STAMP;
    }

    @Override
    public Field<byte[]> field16() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.TOKEN;
    }

    @Override
    public Field<String> field17() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.TOKEN_TYPE;
    }

    @Override
    public Field<String> field18() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.TYPE;
    }

    @Override
    public Field<String> field19() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.PROCESSING_GROUP;
    }

    @Override
    public Field<LocalDateTime> field20() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.PROCESSING_STARTED;
    }

    @Override
    public Field<String> field21() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.SEQUENCE_IDENTIFIER;
    }

    @Override
    public Field<Long> field22() {
        return DeadLetterEntry.DEAD_LETTER_ENTRY.SEQUENCE_INDEX;
    }

    @Override
    public String component1() {
        return getDeadLetterId();
    }

    @Override
    public String component2() {
        return getCauseMessage();
    }

    @Override
    public String component3() {
        return getCauseType();
    }

    @Override
    public byte[] component4() {
        return getDiagnostics();
    }

    @Override
    public LocalDateTime component5() {
        return getEnqueuedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getLastTouched();
    }

    @Override
    public String component7() {
        return getAggregateIdentifier();
    }

    @Override
    public String component8() {
        return getEventIdentifier();
    }

    @Override
    public String component9() {
        return getMessageType();
    }

    @Override
    public byte[] component10() {
        return getMetaData();
    }

    @Override
    public byte[] component11() {
        return getPayload();
    }

    @Override
    public String component12() {
        return getPayloadRevision();
    }

    @Override
    public String component13() {
        return getPayloadType();
    }

    @Override
    public Long component14() {
        return getSequenceNumber();
    }

    @Override
    public String component15() {
        return getTimeStamp();
    }

    @Override
    public byte[] component16() {
        return getToken();
    }

    @Override
    public String component17() {
        return getTokenType();
    }

    @Override
    public String component18() {
        return getType();
    }

    @Override
    public String component19() {
        return getProcessingGroup();
    }

    @Override
    public LocalDateTime component20() {
        return getProcessingStarted();
    }

    @Override
    public String component21() {
        return getSequenceIdentifier();
    }

    @Override
    public Long component22() {
        return getSequenceIndex();
    }

    @Override
    public String value1() {
        return getDeadLetterId();
    }

    @Override
    public String value2() {
        return getCauseMessage();
    }

    @Override
    public String value3() {
        return getCauseType();
    }

    @Override
    public byte[] value4() {
        return getDiagnostics();
    }

    @Override
    public LocalDateTime value5() {
        return getEnqueuedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getLastTouched();
    }

    @Override
    public String value7() {
        return getAggregateIdentifier();
    }

    @Override
    public String value8() {
        return getEventIdentifier();
    }

    @Override
    public String value9() {
        return getMessageType();
    }

    @Override
    public byte[] value10() {
        return getMetaData();
    }

    @Override
    public byte[] value11() {
        return getPayload();
    }

    @Override
    public String value12() {
        return getPayloadRevision();
    }

    @Override
    public String value13() {
        return getPayloadType();
    }

    @Override
    public Long value14() {
        return getSequenceNumber();
    }

    @Override
    public String value15() {
        return getTimeStamp();
    }

    @Override
    public byte[] value16() {
        return getToken();
    }

    @Override
    public String value17() {
        return getTokenType();
    }

    @Override
    public String value18() {
        return getType();
    }

    @Override
    public String value19() {
        return getProcessingGroup();
    }

    @Override
    public LocalDateTime value20() {
        return getProcessingStarted();
    }

    @Override
    public String value21() {
        return getSequenceIdentifier();
    }

    @Override
    public Long value22() {
        return getSequenceIndex();
    }

    @Override
    public DeadLetterEntryRecord value1(String value) {
        setDeadLetterId(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value2(String value) {
        setCauseMessage(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value3(String value) {
        setCauseType(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value4(byte[] value) {
        setDiagnostics(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value5(LocalDateTime value) {
        setEnqueuedAt(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value6(LocalDateTime value) {
        setLastTouched(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value7(String value) {
        setAggregateIdentifier(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value8(String value) {
        setEventIdentifier(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value9(String value) {
        setMessageType(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value10(byte[] value) {
        setMetaData(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value11(byte[] value) {
        setPayload(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value12(String value) {
        setPayloadRevision(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value13(String value) {
        setPayloadType(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value14(Long value) {
        setSequenceNumber(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value15(String value) {
        setTimeStamp(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value16(byte[] value) {
        setToken(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value17(String value) {
        setTokenType(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value18(String value) {
        setType(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value19(String value) {
        setProcessingGroup(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value20(LocalDateTime value) {
        setProcessingStarted(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord value21(String value) {
        setSequenceIdentifier(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public DeadLetterEntryRecord value22(Long value) {
        setSequenceIndex(value);
        return this;
    }

    @Override
    public DeadLetterEntryRecord values(String value1, String value2, String value3, byte[] value4, LocalDateTime value5, LocalDateTime value6, String value7, String value8, String value9, byte[] value10, byte[] value11, String value12, String value13, Long value14, String value15, byte[] value16, String value17, String value18, String value19, LocalDateTime value20, String value21, Long value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }
}
