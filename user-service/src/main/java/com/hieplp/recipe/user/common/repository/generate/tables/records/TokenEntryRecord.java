/*
 * This file is generated by jOOQ.
 */
package com.hieplp.recipe.user.common.repository.generate.tables.records;


import com.hieplp.recipe.user.common.repository.generate.tables.TokenEntry;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TokenEntryRecord extends UpdatableRecordImpl<TokenEntryRecord> implements Record6<String, Integer, String, String, byte[], String> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached TokenEntryRecord
     */
    public TokenEntryRecord() {
        super(TokenEntry.TOKEN_ENTRY);
    }

    /**
     * Create a detached, initialised TokenEntryRecord
     */
    public TokenEntryRecord(String processorName, Integer segment, String owner, String timestamp, byte[] token, String tokenType) {
        super(TokenEntry.TOKEN_ENTRY);

        setProcessorName(processorName);
        setSegment(segment);
        setOwner(owner);
        setTimestamp(timestamp);
        setToken(token);
        setTokenType(tokenType);
    }

    /**
     * Getter for <code>user.token_entry.processor_name</code>.
     */
    public String getProcessorName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>user.token_entry.processor_name</code>.
     */
    public TokenEntryRecord setProcessorName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user.token_entry.segment</code>.
     */
    public Integer getSegment() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>user.token_entry.segment</code>.
     */
    public TokenEntryRecord setSegment(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user.token_entry.owner</code>.
     */
    public String getOwner() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.token_entry.owner</code>.
     */
    public TokenEntryRecord setOwner(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user.token_entry.timestamp</code>.
     */
    public String getTimestamp() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user.token_entry.timestamp</code>.
     */
    public TokenEntryRecord setTimestamp(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>user.token_entry.token</code>.
     */
    public byte[] getToken() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>user.token_entry.token</code>.
     */
    public TokenEntryRecord setToken(byte[] value) {
        set(4, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>user.token_entry.token_type</code>.
     */
    public String getTokenType() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>user.token_entry.token_type</code>.
     */
    public TokenEntryRecord setTokenType(String value) {
        set(5, value);
        return this;
    }

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    @Override
    public Row6<String, Integer, String, String, byte[], String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, Integer, String, String, byte[], String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TokenEntry.TOKEN_ENTRY.PROCESSOR_NAME;
    }

    @Override
    public Field<Integer> field2() {
        return TokenEntry.TOKEN_ENTRY.SEGMENT;
    }

    @Override
    public Field<String> field3() {
        return TokenEntry.TOKEN_ENTRY.OWNER;
    }

    @Override
    public Field<String> field4() {
        return TokenEntry.TOKEN_ENTRY.TIMESTAMP;
    }

    @Override
    public Field<byte[]> field5() {
        return TokenEntry.TOKEN_ENTRY.TOKEN;
    }

    @Override
    public Field<String> field6() {
        return TokenEntry.TOKEN_ENTRY.TOKEN_TYPE;
    }

    @Override
    public String component1() {
        return getProcessorName();
    }

    @Override
    public Integer component2() {
        return getSegment();
    }

    @Override
    public String component3() {
        return getOwner();
    }

    @Override
    public String component4() {
        return getTimestamp();
    }

    @Override
    public byte[] component5() {
        return getToken();
    }

    @Override
    public String component6() {
        return getTokenType();
    }

    @Override
    public String value1() {
        return getProcessorName();
    }

    @Override
    public Integer value2() {
        return getSegment();
    }

    @Override
    public String value3() {
        return getOwner();
    }

    @Override
    public String value4() {
        return getTimestamp();
    }

    @Override
    public byte[] value5() {
        return getToken();
    }

    @Override
    public String value6() {
        return getTokenType();
    }

    @Override
    public TokenEntryRecord value1(String value) {
        setProcessorName(value);
        return this;
    }

    @Override
    public TokenEntryRecord value2(Integer value) {
        setSegment(value);
        return this;
    }

    @Override
    public TokenEntryRecord value3(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public TokenEntryRecord value4(String value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public TokenEntryRecord value5(byte[] value) {
        setToken(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public TokenEntryRecord value6(String value) {
        setTokenType(value);
        return this;
    }

    @Override
    public TokenEntryRecord values(String value1, Integer value2, String value3, String value4, byte[] value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }
}
