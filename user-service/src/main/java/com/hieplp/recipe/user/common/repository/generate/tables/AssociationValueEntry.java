/*
 * This file is generated by jOOQ.
 */
package com.hieplp.recipe.user.common.repository.generate.tables;


import com.hieplp.recipe.user.common.repository.generate.Indexes;
import com.hieplp.recipe.user.common.repository.generate.Keys;
import com.hieplp.recipe.user.common.repository.generate.User;
import com.hieplp.recipe.user.common.repository.generate.tables.records.AssociationValueEntryRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AssociationValueEntry extends TableImpl<AssociationValueEntryRecord> {

    /**
     * The reference instance of <code>user.association_value_entry</code>
     */
    public static final AssociationValueEntry ASSOCIATION_VALUE_ENTRY = new AssociationValueEntry();
    private static final long serialVersionUID = 1L;
    /**
     * The column <code>user.association_value_entry.id</code>.
     */
    public final TableField<AssociationValueEntryRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");
    /**
     * The column <code>user.association_value_entry.association_key</code>.
     */
    public final TableField<AssociationValueEntryRecord, String> ASSOCIATION_KEY = createField(DSL.name("association_key"), SQLDataType.VARCHAR(255).nullable(false), this, "");
    /**
     * The column <code>user.association_value_entry.association_value</code>.
     */
    public final TableField<AssociationValueEntryRecord, String> ASSOCIATION_VALUE = createField(DSL.name("association_value"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>user.association_value_entry.saga_id</code>.
     */
    public final TableField<AssociationValueEntryRecord, String> SAGA_ID = createField(DSL.name("saga_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");
    /**
     * The column <code>user.association_value_entry.saga_type</code>.
     */
    public final TableField<AssociationValueEntryRecord, String> SAGA_TYPE = createField(DSL.name("saga_type"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private AssociationValueEntry(Name alias, Table<AssociationValueEntryRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssociationValueEntry(Name alias, Table<AssociationValueEntryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>user.association_value_entry</code> table reference
     */
    public AssociationValueEntry(String alias) {
        this(DSL.name(alias), ASSOCIATION_VALUE_ENTRY);
    }

    /**
     * Create an aliased <code>user.association_value_entry</code> table reference
     */
    public AssociationValueEntry(Name alias) {
        this(alias, ASSOCIATION_VALUE_ENTRY);
    }

    /**
     * Create a <code>user.association_value_entry</code> table reference
     */
    public AssociationValueEntry() {
        this(DSL.name("association_value_entry"), null);
    }

    public <O extends Record> AssociationValueEntry(Table<O> child, ForeignKey<O, AssociationValueEntryRecord> key) {
        super(child, key, ASSOCIATION_VALUE_ENTRY);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssociationValueEntryRecord> getRecordType() {
        return AssociationValueEntryRecord.class;
    }

    @Override
    public Schema getSchema() {
        return User.USER;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASSOCIATION_VALUE_ENTRY_IDXGV5K1V2MH6FRXUY5C0HGBAU94, Indexes.ASSOCIATION_VALUE_ENTRY_IDXK45EQNXKGD8HPDN6XIXN8SGFT);
    }

    @Override
    public UniqueKey<AssociationValueEntryRecord> getPrimaryKey() {
        return Keys.KEY_ASSOCIATION_VALUE_ENTRY_PRIMARY;
    }

    @Override
    public List<UniqueKey<AssociationValueEntryRecord>> getKeys() {
        return Arrays.<UniqueKey<AssociationValueEntryRecord>>asList(Keys.KEY_ASSOCIATION_VALUE_ENTRY_PRIMARY);
    }

    @Override
    public AssociationValueEntry as(String alias) {
        return new AssociationValueEntry(DSL.name(alias), this);
    }

    @Override
    public AssociationValueEntry as(Name alias) {
        return new AssociationValueEntry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AssociationValueEntry rename(String name) {
        return new AssociationValueEntry(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AssociationValueEntry rename(Name name) {
        return new AssociationValueEntry(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
