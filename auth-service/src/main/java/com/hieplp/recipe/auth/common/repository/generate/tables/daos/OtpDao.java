/*
 * This file is generated by jOOQ.
 */
package com.hieplp.recipe.auth.common.repository.generate.tables.daos;


import com.hieplp.recipe.auth.common.repository.generate.tables.pojos.Otp;
import com.hieplp.recipe.auth.common.repository.generate.tables.records.OtpRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OtpDao extends DAOImpl<OtpRecord, Otp, String> {

    /**
     * Create a new OtpDao without any configuration
     */
    public OtpDao() {
        super(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP, Otp.class);
    }

    /**
     * Create a new OtpDao with an attached configuration
     */
    public OtpDao(Configuration configuration) {
        super(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP, Otp.class, configuration);
    }

    @Override
    public String getId(Otp object) {
        return object.getOtpid();
    }

    /**
     * Fetch records that have <code>otpId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfOtpid(String lowerInclusive, String upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>otpId IN (values)</code>
     */
    public List<Otp> fetchByOtpid(String... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPID, values);
    }

    /**
     * Fetch a unique record that has <code>otpId = value</code>
     */
    public Otp fetchOneByOtpid(String value) {
        return fetchOne(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPID, value);
    }

    /**
     * Fetch records that have <code>sendTo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfSendto(String lowerInclusive, String upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.SENDTO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sendTo IN (values)</code>
     */
    public List<Otp> fetchBySendto(String... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.SENDTO, values);
    }

    /**
     * Fetch records that have <code>otpCode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfOtpcode(String lowerInclusive, String upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPCODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>otpCode IN (values)</code>
     */
    public List<Otp> fetchByOtpcode(String... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPCODE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfStatus(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<Otp> fetchByStatus(Byte... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.STATUS, values);
    }

    /**
     * Fetch records that have <code>otpIssuedAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfOtpissuedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPISSUEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>otpIssuedAt IN (values)</code>
     */
    public List<Otp> fetchByOtpissuedat(LocalDateTime... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPISSUEDAT, values);
    }

    /**
     * Fetch records that have <code>otpExpiredAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfOtpexpiredat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPEXPIREDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>otpExpiredAt IN (values)</code>
     */
    public List<Otp> fetchByOtpexpiredat(LocalDateTime... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.OTPEXPIREDAT, values);
    }

    /**
     * Fetch records that have <code>createdAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfCreatedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.CREATEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdAt IN (values)</code>
     */
    public List<Otp> fetchByCreatedat(LocalDateTime... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.CREATEDAT, values);
    }

    /**
     * Fetch records that have <code>createdBy BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdBy IN (values)</code>
     */
    public List<Otp> fetchByCreatedby(String... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>modifiedAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfModifiedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.MODIFIEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modifiedAt IN (values)</code>
     */
    public List<Otp> fetchByModifiedat(LocalDateTime... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.MODIFIEDAT, values);
    }

    /**
     * Fetch records that have <code>modifiedBy BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Otp> fetchRangeOfModifiedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.MODIFIEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modifiedBy IN (values)</code>
     */
    public List<Otp> fetchByModifiedby(String... values) {
        return fetch(com.hieplp.recipe.auth.common.repository.generate.tables.Otp.OTP.MODIFIEDBY, values);
    }
}
