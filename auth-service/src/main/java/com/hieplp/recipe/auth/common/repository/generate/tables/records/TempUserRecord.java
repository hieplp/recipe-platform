/*
 * This file is generated by jOOQ.
 */
package com.hieplp.recipe.auth.common.repository.generate.tables.records;


import com.hieplp.recipe.auth.common.repository.generate.tables.TempUser;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TempUserRecord extends UpdatableRecordImpl<TempUserRecord> implements Record11<String, String, String, String, Byte, byte[], byte[], String, LocalDateTime, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>authentication.temp_user.userId</code>.
     */
    public TempUserRecord setUserid(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.userId</code>.
     */
    public String getUserid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>authentication.temp_user.username</code>.
     */
    public TempUserRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>authentication.temp_user.fullName</code>.
     */
    public TempUserRecord setFullname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.fullName</code>.
     */
    public String getFullname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>authentication.temp_user.email</code>.
     */
    public TempUserRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>authentication.temp_user.status</code>.
     */
    public TempUserRecord setStatus(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>authentication.temp_user.password</code>.
     */
    public TempUserRecord setPassword(byte[] value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.password</code>.
     */
    public byte[] getPassword() {
        return (byte[]) get(5);
    }

    /**
     * Setter for <code>authentication.temp_user.salt</code>.
     */
    public TempUserRecord setSalt(byte[] value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.salt</code>.
     */
    public byte[] getSalt() {
        return (byte[]) get(6);
    }

    /**
     * Setter for <code>authentication.temp_user.createdBy</code>.
     */
    public TempUserRecord setCreatedby(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.createdBy</code>.
     */
    public String getCreatedby() {
        return (String) get(7);
    }

    /**
     * Setter for <code>authentication.temp_user.createdAt</code>.
     */
    public TempUserRecord setCreatedat(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.createdAt</code>.
     */
    public LocalDateTime getCreatedat() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>authentication.temp_user.modifiedBy</code>.
     */
    public TempUserRecord setModifiedby(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.modifiedBy</code>.
     */
    public String getModifiedby() {
        return (String) get(9);
    }

    /**
     * Setter for <code>authentication.temp_user.modifiedAt</code>.
     */
    public TempUserRecord setModifiedat(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>authentication.temp_user.modifiedAt</code>.
     */
    public LocalDateTime getModifiedat() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, String, Byte, byte[], byte[], String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<String, String, String, String, Byte, byte[], byte[], String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TempUser.TEMP_USER.USERID;
    }

    @Override
    public Field<String> field2() {
        return TempUser.TEMP_USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return TempUser.TEMP_USER.FULLNAME;
    }

    @Override
    public Field<String> field4() {
        return TempUser.TEMP_USER.EMAIL;
    }

    @Override
    public Field<Byte> field5() {
        return TempUser.TEMP_USER.STATUS;
    }

    @Override
    public Field<byte[]> field6() {
        return TempUser.TEMP_USER.PASSWORD;
    }

    @Override
    public Field<byte[]> field7() {
        return TempUser.TEMP_USER.SALT;
    }

    @Override
    public Field<String> field8() {
        return TempUser.TEMP_USER.CREATEDBY;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return TempUser.TEMP_USER.CREATEDAT;
    }

    @Override
    public Field<String> field10() {
        return TempUser.TEMP_USER.MODIFIEDBY;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return TempUser.TEMP_USER.MODIFIEDAT;
    }

    @Override
    public String component1() {
        return getUserid();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getFullname();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public Byte component5() {
        return getStatus();
    }

    @Override
    public byte[] component6() {
        return getPassword();
    }

    @Override
    public byte[] component7() {
        return getSalt();
    }

    @Override
    public String component8() {
        return getCreatedby();
    }

    @Override
    public LocalDateTime component9() {
        return getCreatedat();
    }

    @Override
    public String component10() {
        return getModifiedby();
    }

    @Override
    public LocalDateTime component11() {
        return getModifiedat();
    }

    @Override
    public String value1() {
        return getUserid();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getFullname();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public Byte value5() {
        return getStatus();
    }

    @Override
    public byte[] value6() {
        return getPassword();
    }

    @Override
    public byte[] value7() {
        return getSalt();
    }

    @Override
    public String value8() {
        return getCreatedby();
    }

    @Override
    public LocalDateTime value9() {
        return getCreatedat();
    }

    @Override
    public String value10() {
        return getModifiedby();
    }

    @Override
    public LocalDateTime value11() {
        return getModifiedat();
    }

    @Override
    public TempUserRecord value1(String value) {
        setUserid(value);
        return this;
    }

    @Override
    public TempUserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public TempUserRecord value3(String value) {
        setFullname(value);
        return this;
    }

    @Override
    public TempUserRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public TempUserRecord value5(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public TempUserRecord value6(byte[] value) {
        setPassword(value);
        return this;
    }

    @Override
    public TempUserRecord value7(byte[] value) {
        setSalt(value);
        return this;
    }

    @Override
    public TempUserRecord value8(String value) {
        setCreatedby(value);
        return this;
    }

    @Override
    public TempUserRecord value9(LocalDateTime value) {
        setCreatedat(value);
        return this;
    }

    @Override
    public TempUserRecord value10(String value) {
        setModifiedby(value);
        return this;
    }

    @Override
    public TempUserRecord value11(LocalDateTime value) {
        setModifiedat(value);
        return this;
    }

    @Override
    public TempUserRecord values(String value1, String value2, String value3, String value4, Byte value5, byte[] value6, byte[] value7, String value8, LocalDateTime value9, String value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TempUserRecord
     */
    public TempUserRecord() {
        super(TempUser.TEMP_USER);
    }

    /**
     * Create a detached, initialised TempUserRecord
     */
    public TempUserRecord(String userid, String username, String fullname, String email, Byte status, byte[] password, byte[] salt, String createdby, LocalDateTime createdat, String modifiedby, LocalDateTime modifiedat) {
        super(TempUser.TEMP_USER);

        setUserid(userid);
        setUsername(username);
        setFullname(fullname);
        setEmail(email);
        setStatus(status);
        setPassword(password);
        setSalt(salt);
        setCreatedby(createdby);
        setCreatedat(createdat);
        setModifiedby(modifiedby);
        setModifiedat(modifiedat);
    }
}
